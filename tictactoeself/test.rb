best = [[1, 0], [2, 0], [1, 0], [2, 0], [1, 0], [1, 0], [1, 0], [1, 0], [1, 0], [1, 0], [1, 0], [1, 0], [1, 0], [1, 0], [2, 0], [2, 0], [2, 0], [2, 0], [2, 0], [2, 0], [1, 1], [2, 0], [2, 0], [1, 0], [1, 0], [1, 0], [1, 0], [1, 0], [1, 0], [1, 0], [1, 0], [1, 0], [1, 0], [1, 0], [1, 0], [1, 1], [1, 1], [0, 1], [0, 1], [0, 1], [0, 1], [1, 1], [2, 0], [0, 1], [0, 1], [0, 1], [0, 1], [1, 1], [2, 0], [0, 1], [0, 2], [0, 1], [0, 2], [0, 2], [0, 2], [0, 1], [0, 1], [0, 2], [0, 2], [0, 2], [0, 2], [1, 0], [2, 0], [0, 2], [0, 2], [0, 2], [0, 2], [1, 0], [2, 0], [0, 1], [0, 1], [0, 1], [0, 1], [1, 0], [2, 0], [0, 1], [0, 1], [0, 1], [0, 1], [1, 0], [2, 0], [2, 0], [2, 0], [2, 0], [2, 0], [0, 1], [0, 2], [2, 0], [2, 0], [0, 1], [0, 2], [2, 0], [2, 0], [1, 0], [1, 0], [1, 0], [1, 0], [0, 1], [0, 2], [1, 0], [1, 0], [0, 1], [0, 2], [1, 0], [1, 0], [0, 2], [0, 2], [1, 1], [0, 2], [0, 2], [1, 0], [2, 0], [0, 2], [0, 2], [1, 1], [0, 2], [0, 2], [1, 0], [2, 0], [2, 0], [0, 1], [0, 1], [1, 1], [2, 0], [0, 1], [0, 1], [1, 0], [2, 0], [0, 1], [0, 1], [0, 1], [0, 1], [1, 0], [1, 1], [2, 0], [2, 0], [2, 0], [2, 0], [2, 0], [0, 1], [0, 2], [2, 0], [2, 0], [0, 1], [0, 2], [2, 0], [2, 0], [2, 0], [0, 1], [0, 2], [0, 1], [0, 2], [2, 0], [0, 2], [1, 0], [1, 0], [1, 1], [1, 0], [1, 0], [0, 2], [0, 1], [0, 2], [1, 0], [1, 0], [0, 1], [0, 2], [1, 0], [1, 0], [1, 1], [0, 1], [0, 1], [0, 2], [0, 2], [1, 1], [0, 2], [0, 2], [0, 2], [0, 2], [1, 1], [0, 2], [0, 2], [0, 1], [0, 1], [0, 1], [0, 1], [0, 1], [0, 1], [0, 1], [0, 1], [0, 1], [0, 1], [0, 1], [0, 1], [0, 2], [0, 2], [0, 2], [0, 2], [1, 0], [2, 0], [0, 2], [0, 2], [1, 0], [2, 0], [0, 2], [0, 2], [2, 0], [0, 1], [0, 1], [1, 1], [2, 0], [0, 1], [0, 1], [1, 0], [2, 0], [0, 1], [0, 1], [1, 0], [1, 1], [2, 0], [0, 1], [0, 1], [1, 1], [2, 0], [2, 0], [1, 1], [2, 0], [2, 0], [0, 1], [0, 2], [2, 0], [2, 0], [0, 1], [0, 2], [2, 0], [2, 0], [1, 0], [2, 0], [1, 0], [0, 2], [0, 2], [2, 0], [1, 0], [1, 0], [0, 2], [1, 0], [1, 0], [1, 1], [1, 0], [1, 0], [0, 2], [0, 1], [0, 2], [1, 0], [1, 0], [0, 1], [0, 2], [1, 0], [1, 0], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 0], [0, 2], [2, 0], [0, 2], [2, 0], [2, 1], [2, 1], [1, 0], [2, 1], [2, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 0], [2, 1], [2, 1], [2, 1], [2, 1], [2, 1], [2, 1], [1, 0], [1, 2], [2, 1], [2, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [0, 2], [0, 2], [0, 2], [0, 2], [1, 1], [2, 1], [0, 2], [0, 2], [1, 1], [2, 1], [0, 2], [0, 2], [1, 1], [1, 1], [2, 0], [2, 1], [0, 0], [1, 1], [2, 1], [0, 0], [0, 0], [1, 1], [2, 0], [0, 2], [2, 0], [2, 1], [2, 1], [2, 1], [2, 1], [0, 0], [0, 2], [2, 0], [2, 1], [2, 1], [0, 0], [0, 2], [2, 1], [2, 1], [0, 2], [1, 1], [0, 2], [1, 1], [0, 2], [1, 1], [1, 1], [1, 1], [1, 1], [0, 0], [0, 2], [1, 1], [1, 1], [0, 0], [0, 2], [1, 1], [1, 1], [0, 2], [0, 2], [0, 2], [0, 2], [1, 0], [2, 0], [0, 2], [0, 2], [0, 2], [0, 2], [1, 0], [2, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 2], [0, 2], [1, 1], [2, 1], [0, 2], [0, 2], [1, 0], [2, 0], [0, 2], [0, 2], [1, 1], [2, 1], [0, 2], [0, 2], [1, 0], [2, 0], [1, 1], [0, 0], [0, 0], [1, 1], [2, 0], [2, 1], [0, 0], [0, 0], [0, 0], [0, 0], [1, 1], [2, 1], [0, 0], [0, 0], [1, 1], [2, 0], [0, 0], [0, 0], [0, 2], [2, 0], [2, 1], [2, 1], [2, 1], [2, 1], [0, 0], [0, 2], [2, 0], [2, 1], [2, 1], [0, 0], [0, 2], [2, 1], [2, 1], [0, 2], [1, 1], [0, 2], [1, 1], [0, 0], [0, 0], [0, 2], [1, 1], [1, 1], [1, 1], [1, 1], [0, 0], [0, 2], [1, 1], [1, 1], [0, 0], [0, 2], [1, 1], [1, 1], [0, 2], [0, 2], [1, 1], [2, 1], [0, 2], [0, 2], [0, 2], [0, 2], [1, 1], [2, 1], [0, 2], [0, 2], [0, 0], [0, 0], [1, 1], [2, 1], [0, 0], [0, 0], [0, 0], [0, 0], [1, 1], [2, 1], [0, 0], [0, 0], [1, 1], [1, 1], [1, 0], [1, 2], [2, 1], [2, 1], [1, 0], [1, 2], [2, 1], [2, 1], [0, 0], [0, 2], [2, 1], [2, 1], [0, 0], [0, 2], [2, 1], [2, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [0, 0], [0, 2], [1, 1], [1, 1], [0, 0], [0, 2], [1, 1], [1, 1], [0, 2], [0, 2], [0, 2], [0, 2], [1, 0], [2, 0], [0, 2], [0, 2], [1, 0], [2, 0], [0, 2], [0, 2], [0, 0], [0, 0], [1, 1], [2, 0], [0, 0], [0, 0], [0, 0], [0, 0], [1, 1], [2, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 2], [0, 2], [0, 2], [0, 0], [0, 0], [0, 2]]

def largestoccuring(best_moves)
	n = best_moves.uniq
	f = Array.new
	for z in 0..n.length-1
	  f.push(best_moves.count(n[z]))
	  print best_moves.count(n[z]).to_s + ", "
	  
	end
	print "\n"
	return n[f.index(f.max)]
  end


p largestoccuring(best)
p best.uniq